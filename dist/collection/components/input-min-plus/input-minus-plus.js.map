{"version":3,"file":"input-minus-plus.js","sourceRoot":"","sources":["../../../src/components/input-min-plus/input-minus-plus.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component,Element, Host, h,  State, Prop,Event, EventEmitter, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'input-minus-plus',\n  styleUrl: 'input-minus-plus.css',\n  shadow: true\n})\nexport class InputMinusPlus {\n\n  @Prop({mutable:true, reflect: true}) value? = null; \n  @Prop() min?: number = -Infinity; \n  @Prop() max?: number = Infinity; \n  @Prop() step?: number = 1; \n  @Prop() name?: string; \n  @Prop() required?: boolean = false; \n  \n  @State() number: number = 0;\n  @State() disableMin: boolean = false;\n  @State() disableMax: boolean = false;\n  \n\n  @Event() inpluschange:  EventEmitter<HTMLInputElement>\n\n\n  @Watch('number')\n  watchPropHandler(newValue: number, oldValue: number) {\n    if ( newValue != oldValue) {\n          this.checkDisabled()\n          this.value = newValue;\n    }\n  }\n\n  \n\n\n  @Element() el: HTMLElement;\n  _input: HTMLInputElement;\n\n\n\n  componentWillLoad(){\n    this.changeNumber( this.value * 1)\n  }\n\n  sum(){\n    const newNumber = this.number + this.step;\n    if ( newNumber <= this.max) {\n      this.number = newNumber\n      this.inpluschange.emit(this._input)\n    }\n  }\n\n  less(){\n    const newNumber = this.number - this.step;\n    if ( newNumber >= this.min) {\n      this.number = newNumber\n      this.inpluschange.emit(this._input)\n    }\n  }\n\n  checkDisabled() {\n    this.disableMin = Boolean( this.number == this.min)\n    this.disableMax = Boolean( this.number == this.max)\n  }\n\n  changeNumber(newNumber): true {\n    if ( newNumber < this.min) {\n      this.number = this.min\n    }\n\n    if ( newNumber > this.max) {\n      this.number = this.max\n    }\n\n    return true;\n  }\n\n\n  onInputChange(ev){\n    this.changeNumber( ev.target.value * 1)\n    this.checkDisabled()\n  } \n\n\n\n  render() {\n    return (\n      <Host>\n        <button onClick={()=>this.less()} disabled={this.disableMin}>-</button>\n        <input type=\"text\" name={this.name} value={this.number} onChange={(ev) => this.onInputChange(ev)} required={this.required} />\n        <button onClick={()=>this.sum()} disabled={this.disableMax}>+</button>\n      </Host>\n    );\n  }\n\n}\n"]}